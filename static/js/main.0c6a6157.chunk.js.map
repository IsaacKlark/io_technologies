{"version":3,"sources":["Form.js","LeftSide.js","PasswordRecovery.js","LoggedIn.js","App.js","serviceWorker.js","index.js"],"names":["Form","useState","filledEmail","setFilledEmail","filledPassword","setFilledPassword","location","useLocation","history","useHistory","searchParams","URLSearchParams","search","debounceFillInput","f","timer","args","clearTimeout","setTimeout","debounce","type","value","className","placeholder","onChange","e","target","pattern","required","minLength","onClick","test","length","fullname","match","join","split","pathname","replace","set","push","toString","to","LeftSide","hide","setHide","PasswordRecovery","LoggedIn","name","get","toLowerCase","map","letter","index","array","toUpperCase","href","App","path","exact","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c6a6157.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useLocation, useHistory } from 'react-router-dom';\r\n\r\nconst Form = () => {\r\n  const [filledEmail, setFilledEmail] = useState(\"\");\r\n  const [filledPassword, setFilledPassword] = useState(\"\");\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  \r\n  const debounce = (f) => {\r\n    let timer = \"\";\r\n    return (...args) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => f(...args), 1000);\r\n    }\r\n  }\r\n  \r\n  const fillInput = (type, value) => {\r\n    if (type === \"email\") {\r\n      setFilledEmail(value);\r\n    } else {\r\n      setFilledPassword(value);\r\n    }\r\n  }\r\n  \r\n  const debounceFillInput = debounce(fillInput);\r\n\r\n  const LogIn = () => {\r\n    if (/.+@.+\\..{2}.*/g.test(filledEmail) && filledPassword.length >= 8) {\r\n      const fullname = filledEmail.match(/.+(?=@)/g).join('').split('.').join(' ');\r\n      location.pathname = '/hi';\r\n      history.location.pathname = '/hi';\r\n      history.replace(location.pathname, '/hi');\r\n      searchParams.set('name', fullname);\r\n      history.push({search: searchParams.toString()});\r\n    } else if (!/.+@.+\\..{2}.*/g.test(filledEmail) && filledPassword.length < 8) {\r\n      setFilledEmail(' ');\r\n      setFilledPassword(' ')\r\n    } else if (filledPassword.length < 8) {\r\n      setFilledPassword(' ')\r\n    } else if (!/.+@.+\\..{2}.*/g.test(filledEmail)) {\r\n      setFilledEmail(' ');\r\n    } \r\n  }\r\n  \r\n  return (\r\n    <form className=\"form\">\r\n    <h2 className=\"h2-form\">\r\n      Welcome back\r\n    </h2>\r\n    <p className=\"sign-in\">\r\n      Sign in to continue to IO technologies\r\n    </p>\r\n      <div className=\"input-wrapper\">\r\n        <input \r\n          type=\"email\" \r\n          placeholder=\"Your email\" \r\n          className={filledEmail === \"\" ? \"input\" : \"input filled\"}\r\n          onChange={(e) => {debounceFillInput(e.target.type, e.target.value)}}\r\n          pattern=\".+@.+\\..{2}.*\"\r\n          required\r\n        />\r\n        <p className=\"error-mesage\">\r\n          incorrect input\r\n        </p>\r\n      </div>\r\n      <div className=\"input-wrapper\">\r\n        <input \r\n          type=\"password\" \r\n          placeholder=\"Password\" \r\n          className={filledPassword === \"\" ? \"input\" : \"input filled\"}\r\n          onChange={(e) => {debounceFillInput(e.target.type, e.target.value)}}\r\n          required\r\n          minLength=\"8\"\r\n        />\r\n        <p className=\"error-mesage\">\r\n          incorrect input\r\n        </p>\r\n      </div>\r\n      <button type=\"button\" className=\"log-in\" onClick={LogIn}>\r\n        log in\r\n      </button>\r\n      <div className=\"forgot-password\">\r\n        <p className=\"p-forgot\">\r\n          Forgot your password?\r\n        </p>\r\n        <Link to='/forgot/password' className=\"reset\">\r\n          Reset\r\n        </Link>\r\n      </div>\r\n    </form>\r\n  )}\r\n\r\n  export default Form;","import React, { useState } from 'react';\r\n\r\nconst LeftSide = () => {\r\n  const [hide, setHide] = useState(true);\r\n\r\n  const changeHide = () => {\r\n    if (hide) {\r\n      setHide(false);\r\n    } else {\r\n      setHide(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"help-info\">\r\n      <div className={hide===true ? 'hide-left': 'show-left'}>\r\n        <p className=\"logo\">\r\n          Technologies\r\n        </p>\r\n        <h2 className=\"h2-help\">\r\n          Get how-to help and instructions or specific features in\r\n        </h2>\r\n        <div className=\"buttons-help\"> \r\n          <button type=\"button\" className=\"left-buttons\">\r\n            Help center\r\n          </button>\r\n            or\r\n          <button type=\"button\" className=\"left-buttons\">\r\n            Support\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <button type=\"button\" className=\"show-hide\" onClick={changeHide}>\r\n        {hide === true ? \"=\" : \"x\"}\r\n      </button>\r\n    </section>\r\n  )}\r\n\r\n  export default LeftSide;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PasswordRecovery = () => {\r\n    const [filledEmail, setFilledEmail] = useState(\"\");\r\n    \r\n    const debounce = (f) => {\r\n      let timer = \"\";\r\n      return (...args) => {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => f(...args), 1000);\r\n      }\r\n    }\r\n    \r\n    const fillInput = (value) => {\r\n        setFilledEmail(value);\r\n    }\r\n    \r\n    const debounceFillInput = debounce(fillInput);\r\n    \r\n    return (\r\n      <form className=\"form\" >\r\n        <Link to=\"/\" className=\"back-arrow\">\r\n        </Link>\r\n      <h2 className=\"h2-form forgont-password\">\r\n        Forgot password?\r\n      </h2>\r\n        <input \r\n          type=\"email\" \r\n          placeholder=\"Enter your email\" \r\n          className={\r\n            filledEmail === \"\" \r\n            ? \"input password-recovery\" \r\n            : \"input filled password-recovery\"\r\n          }\r\n          onChange={(e) => {debounceFillInput( e.target.value)}}\r\n          pattern=\".+@.+\\..{2}.*\"\r\n          required\r\n        />\r\n        <button type=\"button\" className=\"Send-button\">\r\n          Send me insturctions\r\n        </button>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PasswordRecovery;","import React from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nconst LoggedIn = () => {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const name = searchParams.get('name').toLowerCase().split('')\r\n    .map((letter, index, array) => {\r\n      if (index === 0 || array[index - 1] === ' ') {\r\n        return letter.toUpperCase();\r\n      } else {\r\n        return letter;\r\n      }\r\n  }).join('');\r\n    \r\n  return (\r\n    <section className=\"logged-in\" >\r\n      <h2 className=\"hi-name\">\r\n        {`Hi, ${name}`}\r\n      </h2>\r\n      <p className=\"sign-in\">\r\n        Please choice your project\r\n      </p>\r\n      <ul className=\"loggedin-ul\">\r\n        <li className=\"loggedin-li\">\r\n          <a href=\"#\" className=\"list-a\">\r\n            Flirchi\r\n          </a>\r\n        </li>\r\n        <li className=\"loggedin-li\">\r\n          <a href=\"#\" className=\"list-a\">\r\n            io\r\n          </a>\r\n        </li>\r\n        <li className=\"loggedin-li\">\r\n          <a href=\"#\" className=\"list-a\">\r\n            company name\r\n          </a>\r\n        </li>\r\n        <li className=\"loggedin-li\">\r\n          <a href=\"#\" className=\"list-a\">\r\n            facenews.com\r\n          </a>\r\n        </li>\r\n        <li className=\"loggedin-li\">\r\n          <a href=\"#\" className=\"list-a\">\r\n            something other\r\n          </a>\r\n        </li>\r\n        <li className=\"loggedin-li\">\r\n          <a href=\"#\" className=\"list-a\">\r\n            ohter again\r\n          </a>\r\n        </li>\r\n        <li className=\"loggedin-li\">\r\n          <a href=\"#\" className=\"list-a\">\r\n            and again\r\n          </a>\r\n        </li>\r\n        <li className=\"loggedin-li\">\r\n          <a href=\"#\" className=\"list-a\">\r\n            one more item\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default LoggedIn;","import React from 'react';\nimport './styles.css';\nimport Form from './Form';\nimport LeftSide from './LeftSide';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport PasswordRecovery from './PasswordRecovery';\nimport LoggedIn from './LoggedIn';\n\nfunction App() {\n  return (\n    <article className=\"register-form\">\n      <LeftSide />\n      <HashRouter>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Form />\n          </Route>\n          <Route path=\"/forgot/password\" exact>\n            <PasswordRecovery />\n          </Route>\n          <Route path=\"/hi\">\n            <LoggedIn />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </article>\n  );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}